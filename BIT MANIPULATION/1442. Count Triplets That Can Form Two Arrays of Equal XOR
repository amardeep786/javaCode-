1442. Count Triplets That Can Form Two Arrays of Equal XOR :: https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/
---------------------------------------------------------------------------------------------------------------------------------------------------


/*
brute force : run 3 loops for i , j , k and check xor  so total O(n^4) ->TLE

we know ki a^a = 0 

suppose a1 s a4 tkk ka XOR 0 hai eg  a1^a2^a3^a4 = 0 iska mtlb  a1 == a2^a3^a4 qki same no ka XOE 0 aata h
or a1^a2 == a3^a4 or a1^a2^a3 = a4 ie agr kahi bhi XOR 0 aaya mtlb uss sub array me j ko kahi bhi rkh skte hain

to agr hum hrek sub array nikale and XOR toh O(n3) to hum baar baar XOR calculate krne s acha h ki prefixXor nikal le

issey baar baar XOR niklanr nai pdega

or kahi xor x1 aaya and in future kahi frse XOR x1 aaya mtlb beech k elements ka XOR 0 hoga and we can have no of elements are triplet
jaga XOR of a = XOR of b hoga

*/

class Solution {
    public int countTriplets(int[] arr) {
        
        int n = arr.length;
        int ans = 0;
        int prefixXor[] = new int[n+1];  // qki 0 bhi add krna h qki wo hmen initially mana h


        prefixXor[0] = 0;

        for(int i = 1;i<=n;i++)
        {
            prefixXor[i] = arr[i-1]^prefixXor[i-1];
        }

        for(int i = 0;i<n+1;i++)
        {
            for(int k = i+1;k<n+1;k++)
            {
                if(prefixXor[k] == prefixXor[i] )
                {
                    ans += k - i-1 ;
                }
            }
        }

        return ans;
    }
}

//-------------------------------------------  without prefixXor-------------------------------------------------------//
class Solution {
    public int findXorSubarrayWithZero(int i, int[] arr){
        int xor = arr[i];
        int count = 0;
        for(int j=i+1; j<arr.length;j++){
            xor ^= arr[j];
            if(xor==0) count += (j-i);
        }
        return count > 0 ? count : -1;
    }
    public int countTriplets(int[] arr) {
        int ans = 0;
        for(int i=0; i<arr.length-1;i++){
            int k = findXorSubarrayWithZero(i,arr);
            if(k>0)
                ans += (k);
        }
        return ans;
    }
}
