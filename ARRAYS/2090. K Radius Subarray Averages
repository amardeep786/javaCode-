2090. K Radius Subarray Averages  :: https://leetcode.com/problems/k-radius-subarray-averages/description/

******************************************************************************************************************************************

class Solution {
    public int[] getAverages(int[] nums, int k) {
        
        int n = nums.length;
        int res[] = new int[n];

        long prefixSum []= new long[n];   // qki cumulatively integer overflow ho rha h
        prefixSum[0] = nums[0];

        for(int i = 1;i<n;i++)
        {
            prefixSum[i] = prefixSum[i-1]+nums[i];
        }

        int i = 0;
        while(i<Math.min(k,n))              // pehle k-1 element tkk left m k element hi nai honge to -1 
        {
            res[i++] = -1 ;
        }

        for(int j = i;j< n-k;j++)  // uske aage n-k element tkk left-right dono honge to average fill krdo 
        {
            long sum = prefixSum[j+k]  ;
            if(j-k-1>= 0)
            sum -= prefixSum[j-k-1] ;


            int divisor = 2*k+1;

            long avg = sum/divisor ;
            res[j] = (int)avg;
        }

        for(int j = Math.max(0,n-k);j<n;j++)  // last k-1 element tkk right m k element hi nai honge to -1 
        {
            res[j] = -1 ;
        }


        return res;

    }
}
