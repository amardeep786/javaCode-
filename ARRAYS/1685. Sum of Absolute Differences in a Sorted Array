1685. Sum of Absolute Differences in a Sorted Array :: https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/description/

***************************************************************************************************************************************************

/*
class Solution {
    public int[] getSumAbsoluteDifferences(int[] nums) {
        
        //******BRUTE FORCE WILL NOT WORK******O(n^2)****************************************************/

        //*********OPTIMIZED**********************************************************************************//

        /*

            we are at index i . so we have to find abs(nums[i]-nums[0])+abs(nums[i]-nums[1])+....+abs(nums[i]-nums[i-1])
            + abs(nums[i+1]-nums[i])+(nums[i+2]-nums[i])+.....+ (nums[n-1]-nums[i])

            on rearranging 
            we get  nums[i]*i - (nums[0]+nums[1]+nums[2]+...+nums[i-1])  + ( nums[i+1]......+ nums[n-1]) * nums[i]*(n-i-1)

        */
/*
        int n = nums.length;

        int res[] = new int[n];

        int prefixSum[] = new int[n];
        prefixSum[0] = nums[0];

        for(int i = 1;i<n;i++)
        {
            prefixSum[i] = prefixSum[i-1]+nums[i];
        }

        for(int i = 0;i<n;i++)
        {
            res[i] = nums[i]* i - (prefixSum[i]-nums[i]) + (prefixSum[n-1]-prefixSum[i]) - (nums[i] * (n-i-1));
        }

        return res;

    }
}

*/

// ****************************WITHOUT EXTRA SPACE****************************************************************************************

class Solution {
    public int[] getSumAbsoluteDifferences(int[] nums) {

        int n = nums.length;
        int res[] = new int[n];
 
        int totalSum = 0;   
        for(var i : nums)
        {
            totalSum+=i ;
        }
       
        int prefixSum = 0 ;

        for(int i = 0;i<n;i++)
        {
            res[i] = nums[i]* i - (prefixSum) + (totalSum-prefixSum-nums[i]) - (nums[i] * (n-i-1));   // total - prefix - nums[i] gives sum from i+1 to n
            prefixSum+=nums[i];  // prefix sum ko update krte jaao
        }

        return res;
    }
}
