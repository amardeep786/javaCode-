Count Inversions :: https://www.geeksforgeeks.org/problems/inversion-of-array-1587115620/1
----------------------------------------------------------------------------------------------
class Solution {
    // arr[]: Input Array
    // N : Size of the Array arr[]
    // Function to count inversions in the array.
     long inversionCount(long arr[], int n) {
        
        return mergeSort(arr,0,n-1);
    }
    
    public long mergeSort(long[]arr , int l,int r)
    {
        long res = 0;
        if( l < r)
        {
            int mid = l + (r-l)/2 ;
            
            res += mergeSort(arr,l,mid);
            res += mergeSort(arr,mid+1,r);
            
            res += merge(arr,l,mid,r);
            
        }
        return res;
    }
    
    private long merge(long arr[] , int l , int mid,int r)
    {
        
        long temp[] = new long[r-l+1];
        int k = 0 ;
        long count = 0;
        int i = l , j = mid+1 ;
        
        while(i <= mid && j <= r)
        {
            
            if(arr[i] > arr[j])
            {
                count += (mid-i+1);
                temp[k++] = arr[j++];
            }else 
            {   
                // agr dono equal h ya i chhota h to bss i ko aage bdhaado 
                temp[k++] = arr[i++];
            }
        }
        
        while(i <= mid)
        {
            temp[k++] = arr[i++];
        }
        
        while(j <= r)
        {
            temp[k++] = arr[j++];
        }
        
        // do changes in original array
        int idx = 0;
        for(int t = l ; t <= r ;t++)
        {
            arr[t] = temp[idx++];
        }
        
        return count;
    }
}

