3224. Minimum Array Changes to Make Differences Equal :: https://leetcode.com/problems/minimum-array-changes-to-make-differences-equal/
---------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
    public int minChanges(int[] nums, int k) {
        
        int n = nums.length;
        
        Map<Integer,Integer> map = new HashMap<>();  // to store diff and their freq 
        List<Integer> limit = new ArrayList<>();   // to store the max diff we can produce by doing 1 operation 
        int i = 0 , j = n-1 ;
        int res = Integer.MAX_VALUE;
        while(i<j)
        {
            int diff = Math.abs(nums[i] - nums[j]);

            map.put(diff,map.getOrDefault(diff,0)+1);

            int maxi = Math.max(nums[i],nums[j]);
            int mini = Math.min(nums[i],nums[j]);

            limit.add(Math.max(maxi , k - mini)) ;  // in 1 opr -> ya to smallest elemnt ko 0 bnado to maxi diff laa skte hain yaa phr bde 
                                                    // element ko max poss value k bnaado to diff k - mini . ab indono m s jo max h wahi max diff
                                                    // hum ek opr m bna skte hain 

            i++;
            j--;
        }
        

        // ab hum hrek diff bnaane k try krege suppose koi diff 3 h uski freq 4 hai 
        // mtlb bche kitne n/2 - 4 elements ab y diff jin pairs k corresponding hai unki limit agr 3 s kamm hai mtlb wo logg 1 operation m 
        // ye diff achieve nai kr paege to unp 2 operation lgega and jinki limit iss jaada h wo to 1 operation m achieve kr lenge 
        // we use binary serch ki kitne value diff s kamm hai to limit ko sorted hina chahiy to we sort it first

        Collections.sort(limit);

        for(var t : map.entrySet())
        {
            int diff = t.getKey() ;
            int freq = t.getValue();

            int oprIndeed = n/2 - freq ;  // total n/2 diff aaege and supp 3 diff ki frreq 4 hai and total values 7 hain to 7-4 = 3 pairs 
                                          // ko equal bnana h  to inko 1 opr to pkka lgega to indeed 3 opr to hai 
                
            // ab dekhlo ki kitne pairs ko 2 opr lgege ie limit array m kitni values limit s kam hai 

            int noOfDiffLessThanDiff = binarySerch(limit,diff) ;  // gives ki kitne element less than diff h 

            int totalOpr = oprIndeed + noOfDiffLessThanDiff ;

            res = Math.min(res,totalOpr);
        }

        return res;
    }

    public int binarySerch(List<Integer> list,int val)
    {
        int index = -1;
        int l = 0 , r = list.size()-1 ;

        while(l<=r)
        {
            int mid = l + (r-l)/2 ;

            if(list.get(mid) < val)
            {
                index = mid;
                l = mid+1;
            }else
            {
                r = mid - 1 ;
            }
        }

        return index == -1 ? 0 : index+1 ;   // index elements hi less than val honge to no of elements index+1
    }
}
