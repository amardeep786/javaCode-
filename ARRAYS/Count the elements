Count the elements  :: https://www.geeksforgeeks.org/problems/count-the-elements1529/1

***************************************************************************************************************************************

class Solution
{
    public  int[] countElements(int a[], int b[], int n, int query[], int q)
    {
        
        // Approach - 1 -> for every query run 2 loops one pointing element in a and for every element in a
        //                 traverse B and keep count of number of elements less than a
        
        // complexity -> O(q*n*n)   -> give TLE
        
        
        // Approach 2 -> sort second array  and apply modified binary search tree to find largest element index 
        // smaller than equal to arr[i]
        
        //complexity -> q(nlogn + logn )  most probably will give TLE  -> got accepted
        
        
    //     int [] result = new int[q];
    //     Arrays.sort(b);
        
    //     for(int i = 0;i<q;i++)
    //     {
    //         int index = query[i] ;
            
    //         int element = a[index];
            
    //         int indexOfSmallerElement = binSearch(b,element);
            
            
    //         result[i] = indexOfSmallerElement ;
            
    //     }
    //     return result ;

    // }
    
    // public int binSearch(int[] b , int element)
    // {
    //     int l = 0;
    //     int n = b.length;
    //     int r = n-1 ;
        
    //     while(l<=r)
    //     {
    //         int mid = l + (r-l)/2 ;
            
    //         if(b[mid] <= element)
    //          l = mid+1 ;
    //         else if(b[mid] == element)
    //          return mid;
    //         else
    //          r = mid -1 ;
    //     }
        
    //     return l;
    // }
    
    
    
    
    
    // Approach 3 -> use upper_bound function to get index of element that is just greater than equal to x
    
    //Approach 4 : store the frequency of elements of array 2 
    
    // then do cumulative sum on that array isse kisi ek element s chhote kitne number hain uss index s pta lg  jaega
  
  
  
    
    int freq[] = new int[100001];
    
    for(int i = 0;i<n;i++)   // frequency aagyi
    {
        freq[b[i]]++ ;
    }
    
  
    
    // cumulative krdo isi array me
    
    int prefixSum[] = new int[100001];
    prefixSum[0] = freq[0];
    
    for(int i = 1;i<100001;i++)
    {
        prefixSum[i] = prefixSum[i-1] + freq[i];
    }
    
    
    int res[] = new int[q] ;
    
    for(int i = 0;i<q;i++)
    {
        res[i] = prefixSum[a[query[i]]];
    }
    
    return res;
    
}
}
  
