1074. Number of Submatrices That Sum to Target : https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/description/

************************************************************************************************************************************************

public class Solution {
    public int numSubmatrixSumTarget(int[][] matrix, int target) {
       
       int m = matrix.length;
       int n = matrix[0].length;

                                                       // take row-wise cumulative sum

        for(int i = 0;i<m;i++)
        {
            for(int j = 1;j<n;j++)
            {
                matrix[i][j] += matrix[i][j-1];
            }
        }

                                                        //now for every start col find 
        int result = 0;
        for(int startCol = 0;startCol<n;startCol++)
        {
            for(int j = startCol;j<n;j++)
            {
                Map<Integer,Integer> map = new HashMap<>();
                map.put(0,1);
                int sum=0;
               // result = 0;
                for(int row=0;row<m;row++)
                {
                    sum += matrix[row][j]-(startCol>0?matrix[row][startCol-1]:0);

                    if(map.containsKey(sum-target))
                    {
                        result+= map.get(sum-target);
                        map.put(sum,map.getOrDefault(sum,0)+1);
                    }
                    else
                    {
                        map.put(sum,map.getOrDefault(sum,0)+1);
                    }
                }
            }
        }

        return result;
    }
}
