Perfect Sum Problem :: https://www.geeksforgeeks.org/problems/perfect-sum-problem5633/1
---------------------------------------------------------------------------------------------
// ----------------- memo using string gives TLE ----------------------------------//
/*

coz string handling takes some time 

class Solution{
    int mod = (int)1e9+7 ;
	public int perfectSum(int arr[],int n, int sum) 
	{ 
	    Map<String,Integer> map = new HashMap<>();
	    return help(arr,n,sum,0,map);
	} 
	
	private int help(int []arr , int n,int sum,int idx,Map<String,Integer> map)
	{
	    
	    if(idx == n )
	    {
	        if(sum == 0)
	        return 1;
	        
	        return 0;
	    }
	    String key = idx + "-"+sum;
	    if(map.containsKey(key))
	    return map.get(key);
	    
	    int pick = help(arr,n,sum-arr[idx],idx+1,map)%mod;
	    int notPick = help(arr,n,sum,idx+1,map)%mod;
	    
	    
	     map.put(key ,  (pick + notPick)%mod) ;
	     return map.get(key);
	}
}
*/
// ------------------------ memo using array ------------------------//
class Solution{
    int mod = (int)1e9+7 ;
	public int perfectSum(int arr[],int n, int sum) 
	{ 
	    Integer dp[][] = new Integer[n+1][sum+1];
	    
	    
	    return help(arr,n,sum,0,dp);
	} 
	
	private int help(int []arr , int n,int sum,int idx,Integer dp[][] )
	{
	    
	    if(idx == n )
	    {
	        if(sum == 0)
	        return 1;
	        
	        return 0;
	    }
	    
	    if(sum < 0)
	    return 0;
	    
	    if(dp[idx][sum] != null)
	    return dp[idx][sum];
	    
	    int pick = help(arr,n,sum-arr[idx],idx+1,dp)%mod;
	    int notPick = help(arr,n,sum,idx+1,dp)%mod;
	    
	    
	     dp[idx][sum] =  (pick + notPick)%mod ;
	     return dp[idx][sum];
	}
}
