118. Pascal's Triangle :: https://leetcode.com/problems/pascals-triangle/description/

****************************************************************************************************************

class Solution {
    public List<List<Integer>> generate(int numRows) {

        List<List<Integer>> result = new ArrayList<>();        

        for(int i = 0;i<numRows;i++)
        {
            List<Integer> list = new ArrayList<>(i+1);

            for(int j = 0;j<i+1;j++)
            {
                if(j== 0 || j==i)   // 1st and last position me 1 
                list.add(1);
            
            else{

            
                int num = result.get(i-1).get(j) + result.get(i-1).get(j-1);  // 1 upr and upr left
                list.add(num);
            }          

        }

        result.add(list);
        
    } return result ;
}
}

***********************************************************GFG SOLUTION *********************************************

https://www.geeksforgeeks.org/problems/pascal-triangle0652/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=bottom_sticky_on_article


class Solution {
    int mod = 1000000007;
    ArrayList<Long> nthRowOfPascalTriangle(int n) {
        
        List<ArrayList<Long>> result = new ArrayList<>();        

        for(int i = 0;i<n;i++)
        {
            ArrayList<Long> list = new ArrayList<>(i+1);

            for(int j = 0;j<i+1;j++)
            {
                if(j== 0 || j==i)   // 1st and last position me 1 
                list.add(1L);
            
            else{

            
                long num = (result.get(i-1).get(j) + result.get(i-1).get(j-1))%mod;  // 1 upr and upr left
                list.add(num);
            }          

        }

        result.add(list);
        
    } return result.get(result.size()-1) ;
    }
}
