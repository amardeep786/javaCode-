2684. Maximum Number of Moves in a Grid :: https://leetcode.com/problems/maximum-number-of-moves-in-a-grid/description/
------------------------------------------------------------------------------------------------------------------------------


class Solution {

    int direction[] = {-1,0,1} ;  // rows ya to -1 ya wahi row ya +1 ho rhi h
    public int maxMoves(int[][] grid) {
        
        int m = grid.length;
        int n = grid[0].length;

        int[][] dp = new int[m][n];     // hrek state p ek baar calculate hoga 

        for(var t : dp)
        {
            Arrays.fill(t,-1);
        }

        int maxMoves = 0 ;

        for(int i = 0;i<m;i++)
        {
            maxMoves = Math.max(maxMoves , DFS(i,0,grid,dp));
        }

        return maxMoves;
    }


    public int DFS(int row,int col,int[][] grid,int[][] dp)
    {

        if(dp[row][col] != -1)
        return dp[row][col];

        int moves = 0 ;

        for(var dir : direction)
        {
            int newRow = row + dir ;
            int newCol = col+1;

            if(isValid(newRow,newCol,grid) && grid[newRow][newCol] > grid[row][col])
            {
                moves = Math.max(moves , 1 + DFS(newRow,newCol,grid,dp));
            }
        }

        return dp[row][col] = moves;
    }

    public boolean isValid(int i,int j,int grid[][])
    {
        return ( i < grid.length && j < grid[0].length && i >= 0 && j >= 0);
    }
}
