33. Search in Rotated Sorted Array :: https://leetcode.com/problems/search-in-rotated-sorted-array/
------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
    public int search(int[] nums, int target) {
        
        // min value ka index nikaal k dono part m binary search

        int n  = nums.length;

        int l = 0 , r = n-1;
        int pivot = -1;
        while(l<r)
        {
            int mid = (l+r)>>1 ;

            if(nums[mid] > nums[r])
            {
                l = mid+1;
            }else if(nums[mid] < nums[r])
            {
                r = mid ;
            }
        }

        pivot = r ; // minimum element ka index
        
        System.out.println(pivot);
        int first = -1 ,second = -1;

        first = binSearch(nums,pivot,n-1,target);
        second = binSearch(nums,0,pivot,target);

        if(first >= 0)
        return first;

        if(second >= 0)
        return second;

        return -1;
    }

    public int binSearch(int[]nums,int l,int r,int target)
    {
        while(l<=r)
        {
            int mid = l + (r-l)/2 ; ;

            if(nums[mid] == target)
            {
                return mid;
            }else if(nums[mid] > target)
            {
                r = mid-1;
            }else
            {
                l = mid+1 ;
            }
        }
        return -1;
    }
}
