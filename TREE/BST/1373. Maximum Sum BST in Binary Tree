1373. Maximum Sum BST in Binary Tree :: https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/**
size doesnot need but if ask ki what is max size BST in binary tree then we return size  
we need class taaki we can store ki left subtree ka max kon hai and right subtree ka min kon h
and root val left k max s bdi and right k min s xhhoti hogi to BST hogi
*/

class NodeValue
{
    int size;
    int maxNode ;
    int minNode;
    int sum ;
    
    
    NodeValue(int size , int maxNode , int minNode,int sum)
    {
        this.size = size ;
        this.maxNode = maxNode;
        this.minNode = minNode;
        this.sum = sum;
    }
}

class Solution {
    int sumBST = 0;
    
    public int maxSumBST(TreeNode root) {
        
        help(root);
        return sumBST ;
    }

    
    public NodeValue help(TreeNode root )
    {
        if(root == null)
        {
            return new NodeValue(0,Integer.MIN_VALUE , Integer.MAX_VALUE,0); // null node ka size 0 , 2nd param 
                                                                            // max value thi to hmne min value pass krdi taki hmesa 
                                                                            // true rhe ans 
                                                                            
        }
        
        var ansFromLeft = help(root.left);
        var ansFromRight = help(root.right);
        
        // ab current ki value left k max s bdi h or right k min s chhoti h to valid h bst 
        if(ansFromLeft.maxNode < root.val && root.val < ansFromRight.minNode)
        {
            int tempSumBST = ansFromLeft.sum + ansFromRight.sum + root.val;

            sumBST = Math.max(tempSumBST , sumBST);
            return new NodeValue(ansFromLeft.size + ansFromRight.size + 1 , Math.max(ansFromRight.maxNode,root.val) , Math.min((root.val),ansFromLeft.minNode),tempSumBST);
            

        }
        
        // if not BST THEN size to max jo aaya h abtk wahi bhejo but mini k liy INt_MIN ot max k liy INT MAX bhejdo taaki aage comparison 
        // m yehi hmesa chhota ans aaye 
        
        return new NodeValue(Math.max(ansFromLeft.size , ansFromRight.size), Integer.MAX_VALUE , Integer.MIN_VALUE,0);
    }

}
