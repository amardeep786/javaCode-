Burning Tree :: https://www.geeksforgeeks.org/problems/burning-tree/1
-------------------------------------------------------------------------------
USING BFS : O(v+e)
-------------------------------------------------------------------------------
class Solution
{
    public static int minTime(Node root, int target) 
    {
        Map<Integer , List<Integer>> map = new HashMap<>();
        buildGraph(root,-1 , map);
        
        
        if(map.get(target) == null)
        return 0;
        
        // do bfs from target
        Queue<Integer> que = new LinkedList<>();
        Set<Integer> vis = new HashSet<>();
        
        que.offer(target);
        vis.add(target);
        
        int count = 0;
        while(!que.isEmpty())
        {
            int n = que.size();
            while(n-- > 0)
            {
                var curr = que.poll();
                for(var i : map.getOrDefault(curr,new ArrayList<>()))
                {
                    if(i == -1 || vis.contains(i))
                    continue;
                    
                    que.offer(i);
                    vis.add(i);
                }
            }
            count++ ;
        }
        
        return count-1;
    }
    private static void buildGraph(Node root , int parent, Map<Integer , List<Integer>> map)  // root ka parent -1 
    {
        if(root == null)
        return ;
        
        if(!map.containsKey(root.data))
        {
            map.put(root.data , new ArrayList<>());
            
            map.get(root.data).add(parent);
            
            if(root.left != null)       // add left & right child
            {
                map.get(root.data).add(root.left.data);
            }
            
            if(root.right != null)
            {
                map.get(root.data).add(root.right.data);
            }           
        }
        buildGraph(root.left , root.data , map);
        buildGraph(root.right , root.data , map);
    }
}
