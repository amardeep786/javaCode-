1190. Reverse Substrings Between Each Pair of Parentheses :: https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/description/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------O(n2)------------------------------------//

/*
class Solution {
    public String reverseParentheses(String s) {
        
        Stack<Character>st = new Stack();

        int n = s.length();
        int i = 0;
        while(i<=n-1)
        {
            char ch = s.charAt(i);
            if(ch=='(')
            {
                st.push(ch);
            }else if(ch == ')')
            {
                String temp = "";
                while(!st.isEmpty() && (!(st.peek() == '(')))
                {
                    
                    temp += st.pop();
                }
                if(!st.isEmpty())
                st.pop(); // remove left also 
            
                for(var t : temp.toCharArray())
                {
                    st.push(t);
                }
            }else
            {
             st.push(ch);   
            }
            i++;
        }

        // last to ')' hoga hi to ab final reverse krdo
        StringBuilder sb = new StringBuilder();

        while(!st.isEmpty() )  // stack m actual ans store hoga tohh append krte wqt rever hojaega
        {
            sb.append(st.pop());
        }

    return sb.reverse().toString();
    }
}

*/

// ----------------------------------------------------------------O(n)-----------------------------------------------------------------------------------------------------------------------------------------------------------------//
class Solution {
    public String reverseParentheses(String s) {
        
        Stack<Integer>st = new Stack();       // to store starting '(' index
        int n = s.length();

        int[] endBracket = new int[n];

        for(int i = 0;i<n;i++)
        {
            //store for every opening there is cllosing
            if(s.charAt(i) == '(')
            {
                st.push(i);
            }else if(s.charAt(i) == ')')
            {
                int j = st.pop();
                
                endBracket[i] = j;
                endBracket[j] = i;
            }
        }

        // ab har baar direction bdlege jb b left ya right bracket mmilega qki left mila to uske right sprint krna shuru kro or right mila to usk left s

        StringBuilder sb = new StringBuilder();
        int flag = 1;  // tells ki right jana h ya left basically for reverse direction

        for(int i = 0;i<n;i+=flag)
        {
            char ch = s.charAt(i);

            if(ch == '(' || ch == ')')
            {
                i = endBracket[i] ; // mtlb usk dusre end p jaao

                flag = -flag;  // changing direction
            }else
            {
                sb.append(ch);
            }
        }
        return sb.toString();

    }
}
