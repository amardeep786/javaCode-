165. Compare Version Numbers :: https://leetcode.com/problems/compare-version-numbers/description/

***************************************************************************************************************************************************


class Solution {
    public int compareVersion(String version1, String version2) {
        List<String> v1 = getTokens(version1);
        List<String> v2 = getTokens(version2);
        
        int m = v1.size();
        int n = v2.size();
        
        int i = 0;
        while (i < m || i < n) {
            int a = i < m ? Integer.parseInt(v1.get(i)) : 0;
            int b = i < n ? Integer.parseInt(v2.get(i)) : 0;
            
            if (a > b)
                return 1;
            else if (b > a)
                return -1;
            else
                i++;
        }
        return 0;
    }
    
    private List<String> getTokens(String version) {
        String[] tokens = version.split("\\.");
        List<String> versionTokens = new ArrayList<>();
        for (String token : tokens) {
            versionTokens.add(token);
        }
        return versionTokens;
    }
}


// ***************************USING TOKENISER****************************************************************************

/*
import java.util.StringTokenizer;
class Solution {
    public int compareVersion(String version1, String version2) {

        StringTokenizer token  = new StringTokenizer(version1,".");
        List<String> list1 = new ArrayList<>();
        while(token.hasMoreTokens())
        {
            list1.add(token.nextToken());   // token add krte jaao
        }

        token = new StringTokenizer(version2,".");
        List<String> list2 = new ArrayList<>();
        while(token.hasMoreTokens())
        {
            list2.add(token.nextToken());
        }

        int n = list1.size();
        int m = list2.size();

        int i = 0 ;

        while(i<m || i<n)  // jbtk dono m kuj b hai chlte rho
        {
            int a = i<n? Integer.parseInt(list1.get(i)) : 0;   // integer me convert krk compare krlia 
            int b = i<m? Integer.parseInt(list2.get(i)) : 0;

            if(a<b)
            return -1;
            else if(a>b)
            return 1;

            i++;

        }

        return 0;   // agr -1 ya 1 nahi return hua to mtlb 0 hoga 
    }
}

*/
