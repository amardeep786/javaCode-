592. Fraction Addition and Subtraction :: https://leetcode.com/problems/fraction-addition-and-subtraction/
----------------------------------------------------------------------------------------------------------
class Solution {
    public String fractionAddition(String expr) {
        int num = 0 , deno = 1 ;  // suppose initially is this

        int n = expr.length();
        int i = 0 ;

        while(i < n)
        {
            int currNum = 0 , currDeno = 0;
            char ch = expr.charAt(i);

            boolean isNeg = (ch == '-');

            // Skip '+' or '-'
            if (expr.charAt(i) == '+' || expr.charAt(i) == '-') {
                i++;
            }

            // build numerator 

            while(i < n && Character.isDigit(expr.charAt(i)))
            {
                currNum = currNum * 10 + (expr.charAt(i) - '0') ;
                i++ ;
            }

            if(isNeg)
            {
                currNum *= -1 ;
            }

            i++; // Skip the division character '/'

            // build denominator 

            while(i < n && Character.isDigit(expr.charAt(i)))
            {
                currDeno = currDeno * 10 + (expr.charAt(i) - '0') ;
                i++ ;
            }

            // ab numerator and denominator aagya to bss 
            // ab jo kuj b pehle tha usme add krdo and nya numeraot and deno aajaega
            // Update the accumulated numerator and denominator
            num = num*currDeno + deno*currNum ;
            deno = deno * currDeno;
        }

        // simplify ti irreduciblt to gcd s dono ko divide krdo
        int gcd = Math.abs(GCD(num, deno));  // abs isliy ki neg dega to issue aaege
        
        num /= gcd;
        deno /= gcd ;
        
        // Return the result in the form "numerator/denominator"
        return num+"/"+deno;

    }
    // Helper method to calculate the greatest common divisor (GCD) using Euclidean algorithm
    private int GCD(int a , int b)
    {
        if(b == 0)
        return a;

        return GCD(b,a%b);
    }

}
