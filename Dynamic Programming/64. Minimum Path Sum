64. Minimum Path Sum :: https://leetcode.com/problems/minimum-path-sum/
----------------------------------------------------------------------------------------------------------------------------------------------
/*
    recursion + memo
*/
// class Solution {
//     public int minPathSum(int[][] grid) {

//         int rows = grid.length;
//         int cols = grid[0].length;
        
//         int dp[][] = new int[rows+1][cols+1];
//         for(var t : dp) Arrays.fill(t,-1);
//         return help(grid,0,0,rows,cols,dp);
//     }
//     public int help(int[][] grid,int i,int j,int r,int c,int dp[][])
//     {
//         if(i== r-1 && j == c-1)
//         return grid[i][j] ;  // yehi value return hokr add hogi

//         if(dp[i][j] != -1)
//         return dp[i][j];

//         if(i == r-1)     // last row hai to right hi jana h bass
//         {
//             return grid[i][j] + help(grid,i,j+1,r,c,dp);
//         }else if(j == c-1)  // go down only
//         {
//             return grid[i][j] + help(grid,i+1,j,r,c,dp);
//         }

//         int right = grid[i][j] + help(grid,i,j+1,r,c,dp);
//         int down =  grid[i][j] + help(grid,i+1,j,r,c,dp);

//         return dp[i][j] = Math.min(right,down);
//     }
// }


// - ----------------------------------- bottom up ----------------------------------------------------------------------------------------------------------//


class Solution {
    public int minPathSum(int[][] grid) {
        
        int rows = grid.length;
        int cols = grid[0].length;

        int[][] output = new int[rows][cols];  // output[i][j] -> min path sum to reach i,j from 0,0

        output[0][0] = grid[0][0];

        for(int i = 1;i < rows;i++)
        {
           output[i][0] =  output[i-1][0] + grid[i][0];  // 0th column me hum sirf upr s hi neeche aa skte hain tohh hrek neeche jaate wqt upr ki value add krte jao
        }

        for(int i = 1;i < cols;i++)
        {
           output[0][i] =  output[0][i-1] + grid[0][i];  // 0th row me hum sirf left s hi right aa skte hain tohh hrek right jaate wqt left ki value add krte jao
        }

        // baaki beech m honge to dekh lenege ki left ya up s us h=jgeh aane m kam cost knsa h usei m apna cost add krege

        for(int i = 1;i<rows;i++)
        {
            for(int j = 1;j<cols;j++)
            {
                output[i][j] = Math.min(output[i-1][j],output[i][j-1]) + grid[i][j] ;
            }
        }

        return output[rows-1][cols-1];
           
    }
}
