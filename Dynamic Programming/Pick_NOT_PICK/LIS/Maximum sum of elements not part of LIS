Maximum sum of elements not part of LIS :: https://www.geeksforgeeks.org/problems/maximum-sum-of-elements-not-part-of-lis/1
========================================================================================================================================================================

class Solution {
    static int maxSumLis(int arr[], int n) {
        
    // hum LIS wala hi logic lgaege bss iss baar LIS k saath saath sum b store krte jaaege
    // since sum max chahiye to agr to LIS ki same length hui to hum wo LIS lenge jiska sum minimum ho
    
    int dp[][] = new int[n][2];
    
    int totalSum = 0;
    
    for(int i = 0;i<n;i++)
    {
        totalSum += arr[i];
    }
    
    for(int i = 0;i<n;i++)
    {
        dp[i][0] = 1 ;      // initially indicidual elemnt is 1 length
        dp[i][1] = arr[i];  // sum is elements itself
    }
    
    
    // ab LIS wala logic
    for(int i = 0;i<n;i++)
    {
        for(int j = 0;j<i;j++)
        {
            
            if(arr[j] >= arr[i])
            continue;
            
            // agr past m chhoti value mili tb dekho ans kya h
            
            // mtlb ki past me koi chhota length tha jisme 1 add kre to curr s b jada
            // ho rha h toh update krdo
            if(dp[i][0] < dp[j][0] + 1)
            {
                dp[i][0] = dp[j][0] + 1 ;   // ek length bdhi curr ki 
                dp[i][1] = dp[j][1] + arr[i] ;    // sum b pichhle wale s add hua
            }
            else if(dp[i][0] == dp[j][0] + 1)
            {
                // mtlb pichhli wali m 1 add krk bhi yehi length aa rha 
                // mtlb length same hai kisi orr ki bhi
                
                dp[i][1] = Math.min(dp[i][1] , dp[j][1]+arr[i]);  // min rkhege qki hme ans max chahiye
            }
        }
        
    }
    
    // ab dp array fill hogya hoga to bss usme knsa max hai wo dekhlo ..agr koi orr bhi max aata h to min sum 
    // dekho
    
    int maxIndex = 0 , sumToBeSubtracted = 0 ;
    
    for( int i = 0;i<n;i++)
    {
        if(dp[i][0] > maxIndex)
        {
            maxIndex = dp[i][0] ;
            sumToBeSubtracted = dp[i][1] ; 
        }else if(dp[i][0] == maxIndex)
        {
            // to min sum wala dekhlo
            sumToBeSubtracted = Math.min(sumToBeSubtracted , dp[i][1]);
        }
    }
    
    return totalSum - sumToBeSubtracted ;
        
    }
}
