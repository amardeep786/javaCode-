K-Palindrome :: https://www.geeksforgeeks.org/problems/find-if-string-is-k-palindrome-or-not1923/1
--------------------------------------------------------------------------------------------------------------------------------------------------

// ------- USING LCS ---------------------------------------------------------------------------

/*
ek string or uska reverse krdo to jo dono m common hai wahi palindrome bnaege qki dusri string pehli ki 
reverse h to hum LCS nikal lenge say length of LCS is x mtlb n-x charcater delete krna pdega 

so if (n-x)<= k to true else false
*/
class Solution {
    public int kPalindrome(String str, int n, int k) {
            
        StringBuilder sb = new StringBuilder(str);
        sb.reverse();
        //int n = str.length();
        int dp[][] = new int[n+1][n+1];
        
        //dp[i][j] -> LCS till length i and j
        
        for(int i = 0 ;i<n+1;i++)
        {
            dp[0][i] = 0;
        }
        
        for(int i = 0 ;i<n+1;i++)   // agr ek ki length 0 hai to common bhi 0
        {
            dp[i][0] = 0;
        }
        
        for(int i = 1;i<=n;i++)
        {
            for(int j = 1;j<=n;j++)
            {
                if(str.charAt(i-1) == sb.charAt(j-1))
                {
                    dp[i][j] = 1 + dp[i-1][j-1];
                }else
                {
                    dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        
        int lengthOfLCS = dp[n][n];   // length of longest common subsequence
        
        return n-lengthOfLCS <=k ? 1:0;
    }
}

// ------2nd intuition--- not work coz position also matters -------------------------------------------------

/*
class Solution {
    public int kPalindrome(String str, int n, int k) {
        
        Map<Character,Integer>map = new HashMap<>();
        
        for(int i = 0;i<n;i++)
        {
            map.put(str.charAt(i),map.getOrDefault(str.charAt(i),0)+1);
        }
        
        int countOfOdd = 0;
        for(var num : map.values())
        {
            if(num%2 != 0)
            countOfOdd++ ;
        }
        
        return countOfOdd-1 < k ? 1:0;
    }
}

*/
